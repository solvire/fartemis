# Generated by Django 5.0.12 on 2025-03-09 05:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("companies", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FeedSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("url", models.URLField(max_length=500)),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("rss", "RSS/Atom Feed"),
                            ("hackernews", "Hacker News Who Is Hiring"),
                            ("reddit", "Reddit"),
                            ("custom", "Custom Source"),
                        ],
                        default="rss",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_fetched", models.DateTimeField(blank=True, null=True)),
                ("fetch_interval_minutes", models.IntegerField(default=60)),
                ("config", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name": "Feed Source",
                "verbose_name_plural": "Feed Sources",
            },
        ),
        migrations.CreateModel(
            name="FeedFetchLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("success", models.BooleanField(default=False)),
                ("items_fetched", models.IntegerField(default=0)),
                ("items_new", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fetch_logs",
                        to="jobboards.feedsource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Fetch Log",
                "verbose_name_plural": "Feed Fetch Logs",
            },
        ),
        migrations.CreateModel(
            name="JobSearchQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("query", models.CharField(max_length=255)),
                ("location", models.CharField(blank=True, max_length=255)),
                ("remote_only", models.BooleanField(default=False)),
                ("min_salary", models.IntegerField(blank=True, null=True)),
                ("max_salary", models.IntegerField(blank=True, null=True)),
                (
                    "job_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("entry", "Entry Level"),
                            ("associate", "Associate"),
                            ("mid", "Mid Level"),
                            ("senior", "Senior"),
                            ("lead", "Lead"),
                            ("manager", "Manager"),
                            ("director", "Director"),
                            ("vp", "Vice President"),
                            ("executive", "Executive"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "employment_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("full_time", "Full Time"),
                            ("part_time", "Part Time"),
                            ("contract", "Contract"),
                            ("temporary", "Temporary"),
                            ("internship", "Internship"),
                            ("volunteer", "Volunteer"),
                        ],
                        max_length=50,
                    ),
                ),
                ("last_executed", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobboard_search_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("company_name", models.CharField(max_length=255)),
                ("location", models.CharField(blank=True, max_length=255)),
                ("remote", models.BooleanField(default=False)),
                ("description", models.TextField()),
                ("description_html", models.TextField(blank=True)),
                ("url", models.URLField()),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("linkedin", "LinkedIn"),
                            ("indeed", "Indeed"),
                            ("glassdoor", "Glassdoor"),
                            ("monster", "Monster"),
                            ("wellfound", "WellFound"),
                            ("remote_ok", "RemoteOK"),
                            ("we_work_remotely", "WeWorkRemotely"),
                            ("github_jobs", "GitHub Jobs"),
                            ("directly_sourced", "Directly Sourced"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "source_id",
                    models.CharField(
                        blank=True,
                        help_text="ID of the job on the source platform",
                        max_length=255,
                    ),
                ),
                ("posted_date", models.DateTimeField(blank=True, null=True)),
                ("expires_date", models.DateTimeField(blank=True, null=True)),
                ("salary_min", models.IntegerField(blank=True, null=True)),
                ("salary_max", models.IntegerField(blank=True, null=True)),
                ("salary_currency", models.CharField(default="USD", max_length=3)),
                (
                    "employment_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("full_time", "Full Time"),
                            ("part_time", "Part Time"),
                            ("contract", "Contract"),
                            ("temporary", "Temporary"),
                            ("internship", "Internship"),
                            ("volunteer", "Volunteer"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "job_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("entry", "Entry Level"),
                            ("associate", "Associate"),
                            ("mid", "Mid Level"),
                            ("senior", "Senior"),
                            ("lead", "Lead"),
                            ("manager", "Manager"),
                            ("director", "Director"),
                            ("vp", "Vice President"),
                            ("executive", "Executive"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("bookmarked", "Bookmarked"),
                            ("applied", "Applied"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("interviewed", "Interviewed"),
                            ("offer_received", "Offer Received"),
                            ("rejected", "Rejected"),
                            ("declined", "Declined"),
                            ("accepted", "Accepted"),
                            ("archived", "Archived"),
                        ],
                        default="new",
                        max_length=50,
                    ),
                ),
                (
                    "relevance_score",
                    models.FloatField(
                        default=0.0,
                        help_text="Score from 0-1 indicating relevance to user profile",
                    ),
                ),
                ("keywords", models.JSONField(blank=True, default=list)),
                (
                    "company_profile",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_listings",
                        to="companies.companyprofile",
                    ),
                ),
                (
                    "required_skills",
                    models.ManyToManyField(
                        blank=True,
                        related_name="required_by_jobs",
                        to="companies.technology",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobboard_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "search_queries",
                    models.ManyToManyField(
                        related_name="jobs", to="jobboards.jobsearchquery"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("url", models.URLField(max_length=500)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("posted_date", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=255)),
                ("raw_data", models.JSONField(blank=True, default=dict)),
                ("is_processed", models.BooleanField(default=False)),
                ("is_relevant", models.BooleanField(default=True)),
                (
                    "company_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feed_items",
                        to="companies.companyprofile",
                    ),
                ),
                (
                    "technologies",
                    models.ManyToManyField(
                        blank=True,
                        related_name="mentioned_in_feed_items",
                        to="companies.technology",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="jobboards.feedsource",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feed_sources",
                        to="jobboards.job",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feed Item",
                "verbose_name_plural": "Feed Items",
                "indexes": [
                    models.Index(
                        fields=["posted_date"], name="jobboards_f_posted__224715_idx"
                    ),
                    models.Index(
                        fields=["is_processed"], name="jobboards_f_is_proc_9c4f4c_idx"
                    ),
                    models.Index(
                        fields=["is_relevant"], name="jobboards_f_is_rele_813cf6_idx"
                    ),
                ],
                "unique_together": {("source", "guid")},
            },
        ),
        migrations.CreateModel(
            name="JobApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "date_applied",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("bookmarked", "Bookmarked"),
                            ("applied", "Applied"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("interviewed", "Interviewed"),
                            ("offer_received", "Offer Received"),
                            ("rejected", "Rejected"),
                            ("declined", "Declined"),
                            ("accepted", "Accepted"),
                            ("archived", "Archived"),
                        ],
                        default="applied",
                        max_length=50,
                    ),
                ),
                (
                    "resume_version",
                    models.CharField(
                        blank=True,
                        help_text="Reference to which resume version was used",
                        max_length=255,
                    ),
                ),
                (
                    "cover_letter_version",
                    models.CharField(
                        blank=True,
                        help_text="Reference to which cover letter was used",
                        max_length=255,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="application",
                        to="jobboards.job",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobboard_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "status"], name="jobboards_j_user_id_62457f_idx"
                    ),
                    models.Index(
                        fields=["date_applied"], name="jobboards_j_date_ap_dd360f_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["source", "source_id"], name="jobboards_j_source_f6f394_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["user", "status"], name="jobboards_j_user_id_8722f3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["user", "relevance_score"],
                name="jobboards_j_user_id_ea48a4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["company_name"], name="jobboards_j_company_d1a8bb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="job",
            unique_together={("source", "source_id", "user")},
        ),
    ]
